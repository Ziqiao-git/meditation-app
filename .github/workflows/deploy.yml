name: Deploy to EKS

on:
  workflow_run:
    workflows: ["Build and Push Docker Image"]
    types:
      - completed
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    # This makes $KUBECONFIG available to every step in this job,
    # so kubectl won't default to localhost:8080
    env:
      KUBECONFIG: ${{ github.workspace }}/kubeconfig

    steps:
      - uses: actions/checkout@v3

      # Step 1: Provide AWS credentials so 'aws eks get-token' can work
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      # Step 2: Write out your kubeconfig file
      - name: Set up kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG_CONTENT }}" > $KUBECONFIG
          chmod 600 $KUBECONFIG

      # Step 3: Verify cluster connection
      - name: Verify cluster connection
        run: kubectl get pods -A

      # Step 4: Deploy to Kubernetes
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/mysql-deployment.yaml
          kubectl apply -f k8s/mysql-service.yaml
          kubectl apply -f k8s/persistent-volumes.yaml
          kubectl apply -f k8s/app-deployment-prod.yaml
          kubectl apply -f k8s/app-service.yaml