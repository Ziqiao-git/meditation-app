name: Test Suite

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x]
        
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
      
    - name: Create uploads directory
      run: mkdir -p public/uploads
      
    - name: Run unit tests
      run: npm run test:unit
      env:
        NODE_ENV: test
        DB_TYPE: sqlite
        DB_HOST: localhost
        DB_NAME: med-app-test

  integration-tests:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: '005078xzq'
          MYSQL_DATABASE: 'med-app-test'
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    
    strategy:
      matrix:
        node-version: [18.x]
        
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
      
    - name: Create uploads directory
      run: mkdir -p public/uploads
      
    - name: Run integration tests
      run: npm run test:integration
      env:
        NODE_ENV: test
        DB_TYPE: mysql
        DB_HOST: localhost
        DB_NAME: med-app-test
        DB_USER: root
        DB_PASSWORD: '005078xzq'
